type Query {
  loginDeveloper(data: DeveloperLoginInput): AuthData!
  getAllMembers: [Member!]!
}

type Mutation {
  createMember(data: MemberCreationInput!): MemberCreationMessage!
  createPosition(title: String!): PositionCreationMessage!
}

#type Subscription {
#}

input DeveloperLoginInput {
  email: String!
  password: String!
}

input MemberCreationInput {
  secret: String!
  year: Int!
}

type MemberCreationMessage {
  _id: ID!
}

type AuthData {
  _id: ID!
  token: String!
  expiresIn: Int!
}

type Member {
  _id: ID!
  secret: String!
  year: Int!
}

type PositionCreationMessage {
  _id: ID!
}
