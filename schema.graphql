type Query {
  loginDeveloper(data: DeveloperLoginInput!): AuthData!
  loginMember(data: MemberLoginInput!): AuthData!
  getAllMembers: [Member!]!
  getAllMembersByPosition(position: ID!): [Member!]!
  getAllPositions: [Position!]!
}

type Mutation {
  createMembers(data: MemberCreationInput!): [MemberCreationMessage!]!
  createPosition(data: PositionCreationInput!): PositionCreationMessage!
  createVote(data: [VoteCreationInput!]!): [VoteCreationMessage!]!
}

#type Subscription {
#}

input DeveloperLoginInput {
  email: String!
  password: String!
}

input MemberLoginInput {
  secret: String!
}

input MemberCreationInput {
  number_of_members: Int!
  year: Int!
  gender: String!
}

input PositionCreationInput {
  title: String!
  eligible_year: Int!
  eligible_gender: String!
}

input VoteCreationInput {
  position: ID!
  to: ID!
}

type MemberCreationMessage {
  _id: ID!
}

type AuthData {
  _id: ID!
  token: String!
  expiresIn: Int!
}

type Member {
  _id: ID!
  secret: String!
  year: Int!
  gender: String!
}

type PositionCreationMessage {
  _id: ID!
}

type VoteCreationMessage {
  _id: ID!
}

type Position {
  _id: ID!
  title: String!
  eligible_year: Int!
  eligible_gender: String!
}
